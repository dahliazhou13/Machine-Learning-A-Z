print("Hello world")
setwd("~/DorisZhou/University/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/P14-Multiple-Linear-Regression")
#Simple Linear Regression
dataset = read.csv('Salary_Data.csv')
# dataset = dataset[,2:3]
#Splitting the dataset into the Training set and Test set
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary,SplitRatio = 2/3)#true if chosen to be training
training_set = subset(dataset,split == TRUE)
test_set = subset(dataset,split == FALSE)
# Feature scaling
# training_set[,2:3] = scale(training_set[,2:3])
# test_set[,2:3] = scale(test_set[,2:3])
#Simple Linear Regression
dataset = read.csv('50_Startups.csv')
# dataset = dataset[,2:3]
#Splitting the dataset into the Training set and Test set
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary,SplitRatio = 2/3)#true if chosen to be training
training_set = subset(dataset,split == TRUE)
test_set = subset(dataset,split == FALSE)
# Feature scaling
# training_set[,2:3] = scale(training_set[,2:3])
# test_set[,2:3] = scale(test_set[,2:3])
View(dataset)
#Simple Linear Regression
dataset = read.csv('50_Startups.csv')
# dataset = dataset[,2:3]
#Splitting the dataset into the Training set and Test set
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit,SplitRatio = 0.8)#true if chosen to be training
training_set = subset(dataset,split == TRUE)
test_set = subset(dataset,split == FALSE)
View(dataset)
View(test_set)
View(test_set)
View(test_set)
#Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('California','New York','Florida'),
labels = c(1,2,3))
#Splitting the dataset into the Training set and Test set
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit,SplitRatio = 0.8)#true if chosen to be training
training_set = subset(dataset,split == TRUE)
test_set = subset(dataset,split == FALSE)
# Feature scaling
# training_set[,2:3] = scale(training_set[,2:3])
# test_set[,2:3] = scale(test_set[,2:3])
View(test_set)
dataset$State = factor(dataset$State,
levels = c('California','New York','Florida'),
labels = c(1,2,3))
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit,SplitRatio = 0.8)#true if chosen to be training
training_set = subset(dataset,split == TRUE)
test_set = subset(dataset,split == FALSE)
# Feature scaling
# training_set[,2:3] = scale(training_set[,2:3])
# test_set[,2:3] = scale(test_set[,2:3])
View(test_set)
View(dataset)
#Simple Linear Regression
dataset = read.csv('50_Startups.csv')
# dataset = dataset[,2:3]
#Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('California','New York','Florida'),
labels = c(1,2,3))
#Splitting the dataset into the Training set and Test set
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit,SplitRatio = 0.8)#true if chosen to be training
training_set = subset(dataset,split == TRUE)
test_set = subset(dataset,split == FALSE)
# Feature scaling
# training_set[,2:3] = scale(training_set[,2:3])
# test_set[,2:3] = scale(test_set[,2:3])
View(dataset)
View(test_set)
regressor = lm(formula = Profit ~ .,
data = training_set)
View(regressor)
regressor.summary()
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administartion + Marketing.Spend + State3,
data = training_set)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State3,
data = training_set)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ .,
data = training_set)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
y_pred
View(test_set)
# Building the optimal model using Backward Elimination
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = training_set)
summary(regressor)
# Building the optimal model using Backward Elimination
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = dataset)
summary(regressor)
