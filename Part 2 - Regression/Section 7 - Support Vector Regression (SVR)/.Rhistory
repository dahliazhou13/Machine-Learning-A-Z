print("Hello world")
setwd("~/DorisZhou/University/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression")
# Polynomial Regression
dataset = read.csv('Position_Salaries.csv')
# dataset = dataset[,2:3]
#Splitting the dataset into the Training set and Test set
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit,SplitRatio = 0.8)#true if chosen to be training
training_set = subset(dataset,split == TRUE)
test_set = subset(dataset,split == FALSE)
View(dataset)
dataset = dataset[,2:3]
View(dataset)
View(dataset)
lin_reg = lm(Salary ~ Level, data = dataset)
View(lin_reg)
summary(lin_reg)
lin_reg = lm(Salary ~ Level,
data = dataset)
summary(lin_reg)
dataset$Level2 = dataset$Level^2
View(dataset)
poly_reg = lm(formula = Salary ~ .,
data = dataset)
summary(poly_reg)
dataset$Level2 = dataset$Level^3
poly_reg = lm(formula = Salary ~ .,
data = dataset)
summary(poly_reg)
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
poly_reg = lm(formula = Salary ~ .,
data = dataset)
summary(poly_reg)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg,newdata = dataset$Level)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg,newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg,newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
dataset$Level3 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg,newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
# Polynomial Regression
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[,2:3]
# Fitting Linear Regression to the dataset
lin_reg = lm(Salary ~ Level,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level3 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Visualizing the Linear Regression results
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg,newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
# Visualizing the Polynomial Regression results
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg,newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg,newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(lin_reg,newdata = data.frame(Level=6.5) )
y_pred = predict(poly_reg,newdata = data.frame(Level=6.5,Level2=6.5^2,Level3=6.5^3,Level4=6.5^4) )
y_pred = predict(poly_reg,newdata = data.frame(Level=6.5,
Level2=6.5^2,
Level3=6.5^3,
Level4=6.5^4) )
x_grid = seq(min(dataset$Level),max(dataset$Level,0.1))
# Visualizing the Regression Model esults (Better Resolution)
x_grid = seq(min(dataset$Level),max(dataset$Level,0.1))
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor,newdata = data.frame(Level=x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model)') +
xlab('Level') +
# Visualizing the Regression Model esults (Better Resolution)
x_grid = seq(min(dataset$Level),max(dataset$Level,0.1))
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor,newdata = data.frame(Level=x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model)') +
xlab('Level') +
ylab('Salary')
setwd("~/DorisZhou/University/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)")
install.packages('e1071')
library(e1071)
regressor = svm(formula = Salary ~.,
data = dataset,
type = 'eps-regression')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor,newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (SVR)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(regressor,newdata = data.frame(Level=6.5) )
y_pred = predict(regressor,newdata = data.frame(Level=6.5) )
y_pred = predict(regressor,data.frame(Level=6.5) )
# Polynomial Regression
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[,2:3]
# Polynomial Regression
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[,2:3]
# install.packages('e1071')
library(e1071)
regressor = svm(formula = Salary ~.,
data = dataset,
type = 'eps-regression')
# Predicting a new result
y_pred = predict(regressor,data.frame(Level=6.5) )
x_grid = seq(min(dataset$Level),max(dataset$Level,0.1))
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor,newdata = data.frame(Level=x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model)') +
xlab('Level') +
ylab('Salary')
